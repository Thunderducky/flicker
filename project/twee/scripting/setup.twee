:: Transitions[script]
// Used to help avoid it be so jarring
$(document).on('sm.passage.hidden', function(event, passage) {
  $("tw-passage").stop();
  $("tw-passage").hide();
});


$(document).on('sm.passage.showing', function(event, passage) {
  $("tw-passage").fadeIn(1000);
  if(!passage || !passage.tags){
    return;
  }
  if(passage.tags.includes("nofade")){
    console.log("Skipping nofade");
    return;
  }

});


// Todo: a proper scrolling engine, where we can see choices and go from there
// We have the basic typewriter affect working pretty well, just needs more work

$(document).on("mouseover", '.has-tooltip', function() {
  const target = $(this).attr('target');
  const value = window.story.passage(target).render();
  const tooltip = $("<div>").html(value).addClass("tooltip");
  $("tw-passage").append(tooltip);
});
$(document).on("mouseout", '.has-tooltip', function() {
  $(".tooltip").remove();
});

// Setup the world
const s = window.story.state;

if(localStorage.getItem("retain")){
  console.log("loadingRetainedGame");
  window.story.state = {
    ...window.story.state,
    ...JSON.parse(localStorage.getItem("story"))
  };
} else {
  s.campground = {
    tentRepaired: false,
    fireStoked: false,
    wardsRepaired: false,
    suppliesRestored: false
  }
  s.tent = {
    hasLantern: true
  }
  s.character = {
    hasWards: false,
    hasWardComponents: false,
    hasFuel: false,
    hasLantern: false
  }
  s.glade = {
    hasFuel: true
  }
  s.cave = {
    hasWardComponents: true
  }
}

window.enableDebug();

